(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{442:function(t,s,a){t.exports=a.p+"assets/img/PureComponent04.9649cbb5.png"},443:function(t,s,a){t.exports=a.p+"assets/img/PureComponent05.bd9f9ee6.png"},532:function(t,s,a){t.exports=a.p+"assets/img/fiber01.158049f8.png"},533:function(t,s,a){t.exports=a.p+"assets/img/fiber02.70a4965c.png"},534:function(t,s,a){t.exports=a.p+"assets/img/fiber03.6f58bab5.png"},535:function(t,s,a){t.exports=a.p+"assets/img/diff01.18337100.png"},608:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#_1-生命周期方法"}},[t._v("1.生命周期⽅法")]),n("ul",[n("li",[n("a",{attrs:{href:"#生命周期方法-新老-有哪些-执行过程是怎样的-为什么发生改变-新生命周期的执行场景"}},[t._v("⽣命周期⽅法(新⽼)有哪些，执⾏过程是怎样的?为什么发生改变?新生命周期的执行场景?")])])])]),n("li",[n("a",{attrs:{href:"#_2-react-fiber到底是什么"}},[t._v("2.React Fiber到底是什么?")]),n("ul",[n("li",[n("a",{attrs:{href:"#为什么需要fiber"}},[t._v("为什么需要fiber")])])])]),n("li",[n("a",{attrs:{href:"#_3-什么是react-hook-它带来了什么。"}},[t._v("3.什么是React Hook，它带来了什么。")]),n("ul",[n("li",[n("a",{attrs:{href:"#hook简介"}},[t._v("Hook简介")])]),n("li",[n("a",{attrs:{href:"#hook解决了什么问题"}},[t._v("Hook解决了什么问题")])]),n("li",[n("a",{attrs:{href:"#hook-api"}},[t._v("Hook API")])])])]),n("li",[n("a",{attrs:{href:"#_4-比较state与props"}},[t._v("4. ⽐较state与props")])]),n("li",[n("a",{attrs:{href:"#_5-react-diff"}},[t._v("5. React diff")]),n("ul",[n("li",[n("a",{attrs:{href:"#算法复杂度-怎么做到o-n-的-回答diff策略略-diff流程-优缺点-与-vue-diff比较"}},[t._v("算法复杂度?怎么做到O(n)的(回答diff策略略)?diff流程?优缺点?与 Vue diff⽐较?")])]),n("li",[n("a",{attrs:{href:"#diffing算法"}},[t._v("diffing算法")])])])]),n("li",[n("a",{attrs:{href:"#_6-react合成事件机制。"}},[t._v("6. React合成事件机制。")]),n("ul",[n("li",[n("a",{attrs:{href:"#executioncontext"}},[t._v("ExecutionContext")])])])]),n("li",[n("a",{attrs:{href:"#_7-解读setstate的同步与异步。"}},[t._v("7. 解读setState的同步与异步。")])]),n("li",[n("a",{attrs:{href:"#_8-函数组件与class组件如何选择"}},[t._v("8. 函数组件与class组件如何选择?")])]),n("li",[n("a",{attrs:{href:"#_9-react性能优化方案"}},[t._v("9. React性能优化⽅案")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"_1-生命周期方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-生命周期方法"}},[t._v("#")]),t._v(" 1.生命周期⽅法")]),t._v(" "),n("h3",{attrs:{id:"生命周期方法-新老-有哪些-执行过程是怎样的-为什么发生改变-新生命周期的执行场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期方法-新老-有哪些-执行过程是怎样的-为什么发生改变-新生命周期的执行场景"}},[t._v("#")]),t._v(" ⽣命周期⽅法(新⽼)有哪些，执⾏过程是怎样的?为什么发生改变?新生命周期的执行场景?")]),t._v(" "),n("p",[t._v("生命周期⽅法，⽤于在组件不同阶段执⾏自定义功能。在组件被创建并插⼊到 DOM 时(即 ("),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/glossary.html#lifecycle-methods",target:"_blank",rel:"noopener noreferrer"}},[t._v("挂载中阶段mounting"),n("OutboundLink")],1),t._v(")，组件更新时，组件取消挂载或从 DOM 中删除时，都有可以使⽤的生命周期⽅法。")]),t._v(" "),n("h4",{attrs:{id:"react-v16-3之前的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-v16-3之前的生命周期"}},[t._v("#")]),t._v(" React V16.3之前的生命周期")]),t._v(" "),n("p",[n("img",{attrs:{src:a(442),alt:"alt PureComponent04"}})]),t._v(" "),n("p",[t._v("V16.4之后的生命周期:\n"),n("img",{attrs:{src:a(443),alt:"alt PureComponent05"}})]),t._v(" "),n("p",[t._v("V17可能会废弃的三个生命周期函数⽤getDerivedStateFromProps替代，目前使⽤的话加上"),n("br"),t._v("\nUNSAFE_:")]),t._v(" "),n("ul",[n("li",[t._v("componentWillMount")]),t._v(" "),n("li",[t._v("componentWillReceiveProps")]),t._v(" "),n("li",[t._v("componentWillUpdate"),n("br"),t._v("\n引⼊两个新的生命周期函数:")]),t._v(" "),n("li",[t._v("static")]),t._v(" "),n("li",[t._v("getDerivedStateFromProps")]),t._v(" "),n("li",[t._v("getSnapshotBeforeUpdate")])]),t._v(" "),n("p",[t._v("如果不想手动给将要废弃的生命周期添加"),n("code",[t._v("UNSAFE_")]),t._v("前缀，可以用下面的命令。")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("npx react-codemod rename-unsafe-lifecycles <path>\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("h2",{attrs:{id:"_2-react-fiber到底是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-fiber到底是什么"}},[t._v("#")]),t._v(" 2.React Fiber到底是什么?")]),t._v(" "),n("h3",{attrs:{id:"为什么需要fiber"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要fiber"}},[t._v("#")]),t._v(" 为什么需要fiber")]),t._v(" "),n("p",[t._v("React的killer feature: virtual dom")]),t._v(" "),n("ol",[n("li",[t._v("为什么需要fiber\n对于⼤型项⽬，组件树会很⼤，这个时候递归遍历的成本就会很⾼，会造成主线程被持续占⽤，结果就是主线程上的布局、动画等周期性任务 就⽆法⽴立即得到处理，造成视觉上的卡顿，影响⽤户体验。")]),t._v(" "),n("li",[t._v("任务分解的意义\n解决上⾯的问题")]),t._v(" "),n("li",[t._v("增量渲染(把渲染任务拆分成块，匀到多帧)")]),t._v(" "),n("li",[t._v("更新时能够暂停，终⽌止，复⽤渲染任务")]),t._v(" "),n("li",[t._v("给不同类型的更新赋予优先级")]),t._v(" "),n("li",[t._v("并发⽅面新的基础能⼒")]),t._v(" "),n("li",[t._v("更流畅\n什么是fiber\n"),n("img",{attrs:{src:a(532),alt:"alt fiber01"}}),t._v(" "),n("img",{attrs:{src:a(533),alt:"alt fiber02"}})])]),t._v(" "),n("h4",{attrs:{id:"什么是fiber"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是fiber"}},[t._v("#")]),t._v(" 什么是fiber")]),t._v(" "),n("p",[t._v("A Fiber is work on a Component that needs to be done or was done. There can be more than one per component."),n("br"),t._v("\nfiber是指组件上将要完成或者已经完成的任务，每个组件可以一个或者多 个。\n"),n("img",{attrs:{src:a(534),alt:"alt fiber03"}})]),t._v(" "),n("h4",{attrs:{id:"fiber链表结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fiber链表结构"}},[t._v("#")]),t._v(" fiber链表结构")]),t._v(" "),n("h2",{attrs:{id:"_3-什么是react-hook-它带来了什么。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是react-hook-它带来了什么。"}},[t._v("#")]),t._v(" 3.什么是React Hook，它带来了什么。")]),t._v(" "),n("h3",{attrs:{id:"hook简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook简介"}},[t._v("#")]),t._v(" Hook简介")]),t._v(" "),n("p",[t._v("Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使⽤ state 以及其他的 React 特性。")]),t._v(" "),n("ol",[n("li",[t._v("Hooks是什么?为了拥抱正能量函数式")]),t._v(" "),n("li",[t._v("Hooks带来的变革，让函数组件有了状态，可以替代class，可以实现React class组件可以有的特性，如执⾏副作⽤等等。")])]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Example")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个新的叫做 “count” 的 state 变量")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("You clicked ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" times")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),n("span",{pre:!0,attrs:{class:"token script language-javascript"}},[n("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        Click me\n      ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("h3",{attrs:{id:"hook解决了什么问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook解决了什么问题"}},[t._v("#")]),t._v(" Hook解决了什么问题")]),t._v(" "),n("p",[t._v("Hook 解决了我们五年来编写和维护成千上万的组件时遇到的各种各样看起来不相关的问题。无论你正在学习 React，或每天使⽤，或者更愿尝试另 一个和 React 有相似组件模型的框架，你都可能对这些问题似曾相识。\n1). 在组件之间复⽤状态逻辑很难\nReact 没有提供将可复⽤性行为“附加”到组件的途径(例如，把组件连接到 store)。如果你使⽤过 React 一段时间，你也许会熟悉一些解决此类问题 的方案，⽐如 render props 和 ⾼阶组件。但是这类方案需要重新组织你的组件结构，这可能会很麻烦，使你的代码难以理解。如果你在 React DevTools 中观察过 React 应⽤，你会发现由 providers，consumers，⾼阶组件，render props 等其他抽象层组成的组件会形成“嵌套地狱”。尽管 我们可以在 DevTools 过滤掉它们，但这说明了一个更深层次的问题: React 需要为共享状态逻辑提供更好的原⽣途径。\n你可以使⽤ Hook 从组件中提取状态逻辑，使得这些逻辑可以单独测试并复⽤。"),n("strong",[t._v("Hook 使你在⽆需修改组件结构的情况下复⽤状态逻辑")]),t._v("。 这使得在 组件间或社区内共享 Hook 变得更便捷。\n2). 复杂组件变得难以理解`\n我们经常维护一些组件，组件起初很简单，但是逐渐会被状态逻辑和副作 ⽤充斥。每个⽣命周期常包含一些不相关的逻辑。例如，组件常在"),n("code",[t._v("componentDidMount")]),t._v("和"),n("code",[t._v("componentDidUpdate")]),t._v("中获取数据。但是，同一 个"),n("code",[t._v("componentDidMount")]),t._v("中可能也包含很多其它的逻辑，如设置事件监 听，⽽之后需在"),n("code",[t._v("componentWillUnmount")]),t._v("中清除。相互关联且需要对照修 改的代码被进⾏了拆分，⽽完全不相关的代码却在同一个⽅法中组合在一 起。如此很容易产生 bug，并且导致逻辑不一致。"),n("br"),t._v("\n在多数情况下，不可能将组件拆分为更⼩的粒度，因为状态逻辑⽆处不 在。这也给测试带来了⼀定挑战。同时，这也是很多⼈人将 React 与状态管 理库结合使⽤的原因之⼀。但是，这往往会引⼊了很多抽象概念，需要你 在不同的⽂件之间来回切换，使得复⽤变得更加困难。"),n("br"),t._v("\n为了解决这个问题，"),n("strong",[t._v("Hook 将组件中相互关联的部分拆分成更小的函数 (比如设置订阅或请求数据)")]),t._v("，⽽并⾮强制按照⽣命周期划分。你还可以 使⽤ reducer 来管理组件的内部状态，使其更加可预测。"),n("br"),t._v("\n3). 难以理解的 class\n除了代码复⽤和代码管理会遇到困难外，我们还发现 class 是学习 React 的⼀⼤屏障。你必须去理解 JavaScript 中 this 的⼯作⽅式，这与其他语⾔存在巨⼤差异。还不能忘记绑定事件处理器。没有稳定的"),n("a",{attrs:{href:"https://babeljs.io/docs/en/babel-plugin-proposal-class-properties",target:"_blank",rel:"noopener noreferrer"}},[t._v("语法提案"),n("OutboundLink")],1),t._v("，这 些代码⾮常冗余。⼤家可以很好地理解 props，state 和⾃顶向下的数据 流，但对 class 却⼀筹莫展。即便便在有经验的 React 开发者之间，对于函 数组件与 class 组件的差异也存在分歧，甚⾄还要区分两种组件的使⽤场景。\n另外，React 已经发布五年年了，我们希望它能在下⼀个五年年也与时俱进。 就像 Svelte，Angular，Glimmer等其它的库展示的那样，组件预编译会带 来巨⼤的潜⼒力力。尤其是在它不局限于模板的时候。最近，我们⼀直在使⽤ Prepack 来试验 component folding，也取得了初步成效。但是我们发现 使⽤ class 组件会⽆意中⿎鼓励开发者使⽤⼀些让优化措施⽆效的⽅案。\nclass 也给⽬前的⼯具带来了⼀些问题。例例如，class 不能很好的压缩，并 且会使热重载出现不稳定的情况。因此，我们想提供⼀个使代码更易于优 化的 API。\n为了解决这些问题，"),n("strong",[t._v("Hook 使你在⾮ class 的情况下可以使⽤更多的 React 特性")]),t._v("。 从概念上讲，React 组件⼀直更像是函数。⽽ Hook 则拥抱 了函数，同时也没有牺牲 React 的精神原则。Hook 提供了问题的解决⽅ 案，⽆需学习复杂的函数式或响应式编程技术。")]),t._v(" "),n("h3",{attrs:{id:"hook-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook-api"}},[t._v("#")]),t._v(" Hook API")]),t._v(" "),n("ul",[n("li",[t._v("基础 Hook\n"),n("ul",[n("li",[t._v("useState")]),t._v(" "),n("li",[t._v("useEffect")]),t._v(" "),n("li",[t._v("useContext")])])]),t._v(" "),n("li",[t._v("额外的 Hook\n"),n("ul",[n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#usereducer",target:"_blank",rel:"noopener noreferrer"}},[t._v("useReducer"),n("OutboundLink")],1),t._v("\n在某些场景下，"),n("code",[t._v("useReducer")]),t._v("会⽐"),n("code",[t._v("useState")]),t._v("更适⽤，例例如 state 逻辑较复杂且包含多个⼦值，或者下⼀个 state 依赖于之前的 state 等。并且，使⽤ useReducer 还能给那些会触发深更新的组件做性 能优化，因为"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down",target:"_blank",rel:"noopener noreferrer"}},[t._v("你可以向⼦组件传递 dispatch ⽽不是回调函数"),n("OutboundLink")],1),t._v(" 。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#usecallback",target:"_blank",rel:"noopener noreferrer"}},[t._v("useCallback"),n("OutboundLink")],1),t._v("\n返回一个 "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Memoization",target:"_blank",rel:"noopener noreferrer"}},[t._v("memoized"),n("OutboundLink")],1),t._v(" 回调函数。\n把内联回调函数及依赖项数组作为参数传入"),n("code",[t._v("useCallback")]),t._v("，它将返回该回调函数的 memoized 版本，该回调函数仅在某个依赖项改变时才会更新。当你把回调函数传递给经过优化的并使用引用相等性去避免非必要渲染（例如"),n("code",[t._v("shouldComponentUpdate")]),t._v("）的子组件时，它将非常有用。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useMemo",target:"_blank",rel:"noopener noreferrer"}},[t._v("useMemo"),n("OutboundLink")],1),t._v("\n把“创建”函数和依赖项数组作为参数传入"),n("code",[t._v("useMemo")]),t._v("，它仅会在某个依赖项改变时才重新计算 memoized 值。这种优化有助于避免在每次渲染时都进行高开销的计算。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useRef",target:"_blank",rel:"noopener noreferrer"}},[t._v("useRef"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("useRef")]),t._v("返回⼀个可变的 ref 对象，其"),n("code",[t._v(".current")]),t._v("属性被初始化为 传⼊的参数("),n("code",[t._v("initialValue")]),t._v(")。返回的 ref 对象在组件的整个⽣ 命周期内保持不变。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useImperativeHandle",target:"_blank",rel:"noopener noreferrer"}},[t._v("useImperativeHandle"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("useImperativeHandle")]),t._v("可以让你在使⽤"),n("code",[t._v("ref")]),t._v("时⾃定义暴露给⽗父组 件的实例例值。在在⼤多数情况下，应当避免使⽤ ref 这样的命令式 代码。"),n("code",[t._v("useImperativeHandle")]),t._v("应当与"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/react-api.html#reactforwardref",target:"_blank",rel:"noopener noreferrer"}},[t._v("forwardRef"),n("OutboundLink")],1),t._v(" ⼀起使⽤。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#useLayoutEffect",target:"_blank",rel:"noopener noreferrer"}},[t._v("useLayoutEffect"),n("OutboundLink")],1),t._v("\n函数签名与"),n("code",[t._v("useEffect")]),t._v("相同，但它会在所有的 DOM 变更之后同 步调⽤ effect。")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/hooks-reference.html#usedebugvalue",target:"_blank",rel:"noopener noreferrer"}},[t._v("useDebugValue"),n("OutboundLink")],1),t._v(" "),n("code",[t._v("useDebugValue")]),t._v("可⽤于在 React 开发者⼯具中显示⾃定义 hook 的标签。")])])])]),t._v(" "),n("h2",{attrs:{id:"_4-比较state与props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-比较state与props"}},[t._v("#")]),t._v(" 4. ⽐较state与props")]),t._v(" "),n("p",[t._v("state是⼀种数据结构，在当前组件有效，使⽤setState进⾏更改，class组件中会引发组件渲染。")]),t._v(" "),n("p",[t._v("函数组件中可以⽤useState、useReducer。"),n("br"),t._v("\n与class组件中的setState不同的是，如果前后两次的值相同，函数组件中 的useState和useReducer Hook会放弃更新，原地修改setState不会引起 重新渲染。"),n("br"),t._v("\n通常，你不应该在 React 中修改本地 state。然⽽，作为⼀条出路，你可以 ⽤⼀个增⻓的计数器来在 state 没变的时候依然强制⼀次重新渲染:")]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ignored"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forceUpdate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useReducer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forceUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("这也是function组件中类似class组件中的forceUpdate。")]),t._v(" "),n("p",[t._v("⽽props(属性“properties” 的缩写)是组件的属性值，由⽗父组件传递过 来，就组件⾃身来说，props是不可变的，组件不能改变⾃己的props，但 是可以把⼦组件的props放在⼀起统⼀管理，props可以是多种数据类型， 如对象、函数等。")]),t._v(" "),n("p",[n("code",[t._v("props")]),t._v("和class"),n("code",[t._v("state")]),t._v("都是普通的 JavaScript 对象。它们都是⽤来保存信 息的，这些信息可以控制组件的渲染输出，⽽它们的⼀个重要的不同点就 是:props 是传递给组件的(类似于函数的形参)，⽽ state 是在组件 内被组件⾃己管理的(类似于在⼀个函数内声明的变量)。")]),t._v(" "),n("h2",{attrs:{id:"_5-react-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-react-diff"}},[t._v("#")]),t._v(" 5. React diff")]),t._v(" "),n("h3",{attrs:{id:"算法复杂度-怎么做到o-n-的-回答diff策略略-diff流程-优缺点-与-vue-diff比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度-怎么做到o-n-的-回答diff策略略-diff流程-优缺点-与-vue-diff比较"}},[t._v("#")]),t._v(" 算法复杂度?怎么做到O(n)的(回答diff策略略)?diff流程?优缺点?与 Vue diff⽐较?")]),t._v(" "),n("p",[n("img",{attrs:{src:a(535),alt:"alt diff01"}}),t._v("\n在某⼀时间节点调⽤React的render⽅法，会创建⼀棵由React元素组成的 树，在下⼀次state或props更新时，相同的render⽅法会返回⼀棵不同的 树。React需要基于这两棵树之间的差别来判断如何有效率的更新UI以保证 当前UI与最新的树保持同步。\n这个问题有⼀些通⽤的解决⽅案，即⽣成⼀棵树转换成另⼀棵树的最⼩操 作数。然⽽，即使在最前沿的算法中，该算法的复杂程度为O(n 3 )，其中 n 是树中元素的数量。\n如果在 React 中使⽤了该算法，那么展示 1000 个元素所需要执⾏的计算 量将在⼗十亿的量级范围。这个开销实在是太过⾼昂。于是 React 在以下两 个假设的基础之上提出了⼀套 O(n) 的启发式算法:")]),t._v(" "),n("ol",[n("li",[t._v("两个不同类型的元素会产⽣出不同的树;")]),t._v(" "),n("li",[t._v("开发者可以通过 key prop 来暗示哪些⼦元素在不同的渲染下能保持稳定;\n在实践中，我们发现以上假设在几乎所有实⽤的场景下都成⽴立。")])]),t._v(" "),n("h3",{attrs:{id:"diffing算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diffing算法"}},[t._v("#")]),t._v(" diffing算法")]),t._v(" "),n("p",[t._v("算法复杂度O(n)")]),t._v(" "),n("p",[t._v("diff 策略略")]),t._v(" "),n("ol",[n("li",[t._v("同级⽐较，WebUI中DOM节点跨层级的移动操作特别少，可以忽略略不计。")]),t._v(" "),n("li",[t._v("拥有不同类型的两个组件将会⽣成不同的树形结构。例如:div->p, CompA->CompB")]),t._v(" "),n("li",[t._v("开发者可以通过 key prop 来暗示哪些⼦元素在不同的渲染下能保持稳定;")])]),t._v(" "),n("h4",{attrs:{id:"_1-react-diff-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-react-diff-实现"}},[t._v("#")]),t._v(" 1. React diff 实现")]),t._v(" "),n("p",[t._v("当对⽐两颗树时，React ⾸先⽐较两棵树的根节点，不同类型的根节点元\n素会有不同的⾏为。")]),t._v(" "),n("p",[t._v("1)⽐对不同类型的元素\n当根节点为不同类型的元素时，React会卸载⽼老老树并创建新树。举个例例⼦， 从变成，从"),n("code",[t._v("<Article>")]),t._v("变成"),n("code",[t._v("<Comment>")]),t._v("，或者从"),n("code",[t._v("<Button>")]),t._v("变成"),n("code",[t._v("<div>")]),t._v("，这些都会触发⼀个完整的重建流程。\n卸载⽼老老树的时候，⽼老老的DOM节点也会被销毁，组件实例例会执⾏ componentWillUnmount。创建新树的时候，也会有新的DOM节点插⼊ DOM，这个组件实例例会执⾏"),n("code",[t._v("componentWillMount()")]),t._v("和"),n("code",[t._v("componentDidMount()")]),t._v(" 。当然，⽼树相关的state也被消除。"),n("br"),t._v("\n2) 比对同类型的DOM元素\n当对⽐同类型的DOM元素时候，React会比对新旧元素的属性，同时保留老的，只去更新改变的属性。\n处理完DOM节点之后，React然后会去递归遍历⼦节点。"),n("br"),t._v("\n3)⽐对同类型的组件元素\n这个时候，React更新该组件实例例的props，调⽤"),n("code",[t._v("componentWillReceiveProps()")]),t._v(" 和 "),n("code",[t._v("componentWillUpdate()")]),t._v("。下⼀步，render被调⽤，diff算法递归遍历新⽼老老树。"),n("br"),t._v("\n4) 对子节点进⾏递归\n当递归DOM节点的⼦元素时，React会同时遍历两个⼦元素的列列表。 下⾯是遍历⼦节点的源码，解析这段源码得出以下思路:")]),t._v(" "),n("ul",[n("li",[t._v("⾸先判断当前节点是否是没有key值的顶层fragment元素，如果是的 话，需要遍历的newChild就是newChild.props.children元素。")]),t._v(" "),n("li",[t._v("判断newChild的类型，如果是object，并且$$typeof是 REACT_ELEMENT_TYPE，那么证明这是⼀个单个的HTML标签元素， 则⾸先执⾏reconcileSingleElement函数，返回协调之后得到的fiber， placeSingleChild函数则把这个fiber放到指定位置上。")]),t._v(" "),n("li",[t._v("REACT_PORTAL_TYPE同上⼀条。")]),t._v(" "),n("li",[t._v("如果newChild是string或者number，即⽂本，则执⾏ reconcileSingleTextNode函数，返回协调之后得到的fiber，依然是 placeSingleChild把这个fiber放到指定的位置上。")]),t._v(" "),n("li",[t._v("如果是newChild数组，则执行reconcileChildrenArray对数组进行协调。")])]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildFibers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  currentFirstChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  newChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  expirationTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isUnkeyedTopLevelFragment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" \n    newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("  \n    newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_FRAGMENT_TYPE")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isUnkeyedTopLevelFragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle object types")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$$"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_ELEMENT_TYPE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("placeSingleChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileSingleElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            currentFirstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REACT_PORTAL_TYPE")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("placeSingleChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileSinglePortal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            currentFirstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            expirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" newChild "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("placeSingleChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileSingleTextNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        currentFirstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        expirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildrenArray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      currentFirstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      expirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwOnInvalidObjectType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remaining cases are all treated as empty.")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteRemainingChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("returnFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentFirstChild"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br")])]),n("h4",{attrs:{id:"_2-react-diff的优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-diff的优缺点"}},[t._v("#")]),t._v(" 2. React diff的优缺点")]),t._v(" "),n("p",[t._v("React由于设定的diff前提，达到了O(n)的算法复杂度，在⽬前所有diff中算 的上是优秀的了，再加上fiber的架构，做到了增量渲染，防⽌止了掉帧，这 绝对是前端中的⼀⼤革新，其思想值得前端⼯程师深⼊学习。"),n("br"),t._v("\n但是也有⼀些⽬前没有解决的缺点。⽐如说由于React的fiber的单链表结构 性质，导致React diff查找的时候不能从两端开始查找，这在时间复杂度上 是⾮常值得优化的⼀个点，React⽬前也在寻求这种优化，也让我们拭⽬等 待React的进⼀步优化。")]),t._v(" "),n("h4",{attrs:{id:"_3-react中diff与vue-diff的对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-react中diff与vue-diff的对比"}},[t._v("#")]),t._v(" 3. React中diff与vue diff的对⽐")]),t._v(" "),n("p",[t._v("React本身架构与Vue不同，Vue中没有fiber，⽬前也⽤不到fiber。⽽且 React diff算法的实现是基本⾃身架构的，React实现不了双向查找，⽽vue 可以。\n相同点是都是深度优先、同层级⽐较，都借助key，都有批量新增和删除等 等。")]),t._v(" "),n("h2",{attrs:{id:"_6-react合成事件机制。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-react合成事件机制。"}},[t._v("#")]),t._v(" 6. React合成事件机制。")]),t._v(" "),n("p",[t._v("React中有⾃己的事件系统模式，通常被称为React合成事件。之所以采⽤ 这种⾃己定义的合成事件，⼀⽅⾯是为了抹平事件在不同平台体现出来的差异性，这使得React开发者不需要⾃己再去关注浏览器事件兼容性问题， 另⼀⽅⾯是为了统⼀管理事件，提⾼性能，这主要体现在React内部实现事 件委托，并且记录当前事件发⽣的状态上。\n事件委托，也就是我们通常提到的事件代理机制，这种机制不会把事件处 理函数直接绑定在真实的节点上，⽽是把所有的事件绑定到结构的最外 层，使⽤⼀个统⼀的事件监听和处理函数。当组件挂载或卸载时，只是在 这个统⼀的事件监听器上插⼊或删除⼀些对象;当事件放⽣时，⾸先被这 个统⼀的事件监听器处理，然后在映射表⾥找到真正的事件处理函数并调 ⽤。这样做简化了事件处理和回收机制，效率也有很⼤提升。\n记录当前事件发⽣的状态，即记录事件执⾏的上下⽂，这便便于React来处理 不同事件的优先级，达到谁优先级⾼先处理谁的⽬的，这⾥也就实现了 React的增量渲染思想，可以预防掉帧，同时达到⻚⾯更顺滑的⽬的，提升⽤户体验。")]),t._v(" "),n("h3",{attrs:{id:"executioncontext"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#executioncontext"}},[t._v("#")]),t._v(" ExecutionContext")]),t._v(" "),n("p",[t._v("React执⾏栈(React execution stack)中，所处于几种环境的值，所对应的的全局变量是react-reconciler/src/ReactFiberWorkLoop.js⽂件中的"),n("code",[t._v("executionContext")]),t._v(" 。")]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[t._v(" \ntype ExecutionContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NoContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*                */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" BatchedContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*           */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b000001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EventContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*             */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b000010")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" DiscreteEventContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*     */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b000100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" LegacyUnbatchedContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*   */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b001000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" RenderContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*            */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b010000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CommitContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*            */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b100000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h2",{attrs:{id:"_7-解读setstate的同步与异步。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-解读setstate的同步与异步。"}},[t._v("#")]),t._v(" 7. 解读setState的同步与异步。")]),t._v(" "),n("p",[t._v("React中理论上有三种模式可选，默认的legacy 模式、blocking模式和 concurrent模式，legacy 模式在合成事件中有⾃动批处理的功能，但仅限 于⼀个浏览器任务。⾮ React 事件想使⽤这个功能必须使⽤\n"),n("code",[t._v("unstable_batchedUpdates")]),t._v(" 。在 blocking 模式和 concurrent 模式下，所 有的 setState 在默认情况下都是批处理的，但是这两种模式⽬前仅实验 版本可⽤。\n在⽬前的版本中，事件处理函数内部的setState是异步的，即批量执⾏，这 样是为了避免⼦组件被多次渲染，这种机制可以在⼤型应⽤中得到很好的 性能提升。但是React官⽹网也提到这只是⼀个实现的细节，所以请不要直接 依赖于这种机制。在以后的版本当中，React 会在更多的情况下默认地使 ⽤ state 的批更新机制。")]),t._v(" "),n("h2",{attrs:{id:"_8-函数组件与class组件如何选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-函数组件与class组件如何选择"}},[t._v("#")]),t._v(" 8. 函数组件与class组件如何选择?")]),t._v(" "),n("ol",[n("li",[t._v("hook之前的函数组件是什么样⼦? 开课吧web全栈架构师\n⽆状态，⽆副作⽤，只能做单纯的展示组件。")]),t._v(" "),n("li",[t._v("class组件有什么弊端，为什么要引⼊hook?")])]),t._v(" "),n("ul",[n("li",[t._v("在组件之间复⽤状态逻辑很难")]),t._v(" "),n("li",[t._v("复杂组件变得难以理解")]),t._v(" "),n("li",[t._v("难以理解的 class")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("引⼊了hook之后的函数组件发⽣了哪些变化?"),n("br"),t._v("\n函数组件可以存储和改变状态值(useState、useReducer)，可以执 ⾏副作⽤(useEffect、useLayoutEffect)，还可以复⽤状态逻辑(⾃ 定义hook)。")]),t._v(" "),n("li",[t._v("函数组件与class组件如何选择?\n出现以上缺点的情况下都适合使⽤函数组件。")])]),t._v(" "),n("h2",{attrs:{id:"_9-react性能优化方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-react性能优化方案"}},[t._v("#")]),t._v(" 9. React性能优化⽅案")]),t._v(" "),n("ol",[n("li",[t._v("减少不必要渲染，如⽤shouldComponentUpdate、\nPureComponent、React.memo实现。")])]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[t._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateSimpleMemoComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n Component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n nextProps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n updateExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ref "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     didReceiveUpdate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateExpirationTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expirationTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bailoutOnAlreadyFinishedWork")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n         current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateFunctionComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   Component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("数据缓存。")])]),t._v(" "),n("ul",[n("li",[t._v("useMemo缓存参数、useCallback缓存函数。")])]),t._v(" "),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" updateMemo"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("(\n  nextCreate: () => T,\n  deps: Array")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" | void | null,\n): T ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hook "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateWorkInProgressHook")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextDeps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" deps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextDeps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevDeps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])]),n("div",{staticClass:"language-jsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-jsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" updateCallback"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("(callback: T, deps: Array")]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" | void | null): T ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hook "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateWorkInProgressHook")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextDeps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" deps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memoizedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextDeps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevDeps"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mixed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" prevState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    } \n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("ul",[n("li",[t._v("函数、对象尽量不要使⽤内联形式(如context的value object、 refs function)。")]),t._v(" "),n("li",[t._v("Router中的内联函数渲染时候使⽤render或者children，不要使⽤ component。\n当你⽤"),n("code",[t._v("component")]),t._v("的时候，Router会⽤你指定的组件和 React.createElement创建⼀个新的[React element]。这意味着当 你提供的是⼀个内联函数的时候，每次render都会创建⼀个新的组 件。这会导致不再更新已经现有组件，⽽是直接卸载然后再去挂载 ⼀个新的组件。因此，当⽤到内联函数的内联渲染时，请使⽤ render或者children。")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("不要滥⽤功能项，如context、props等。")]),t._v(" "),n("li",[t._v("懒加载，对于⻓⻚列列表分⻚加载。")]),t._v(" "),n("li",[t._v("减少http请求。")])]),t._v(" "),n("p",[t._v("总结:减少计算、渲染和请求。")])])}),[],!1,null,null,null);s.default=e.exports}}]);