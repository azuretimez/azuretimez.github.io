(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{691:function(t,s,e){"use strict";e.r(s);var a=e(6),i=Object(a.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#非原始值的响应式方案"}},[this._v("非原始值的响应式方案")])])])]),s("p"),this._v(" "),s("h2",{attrs:{id:"非原始值的响应式方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非原始值的响应式方案"}},[this._v("#")]),this._v(" 非原始值的响应式方案")]),this._v(" "),s("p",[this._v("实现响应式要比想象中艰难多，不是单纯拦截get/set操作即可。如何拦截for...in循环，track函数如何追踪拦截到for...in循环。还支持集合类型，如Map、Set、WeakMap以及WeakSet等，应该如何对集合类型进行代理呢？实际上，想要实现完善的响应式数据，需要深入语言规范。本章在揭晓答案的同时，也会从语言规范的层面来分析原因，让你对响应式数据有更深入的理解。\n另外，本章会引用ECMA-262规范，如不作特殊说明，皆指该规范的2021版本。")])])}),[],!1,null,null,null);s.default=i.exports}}]);